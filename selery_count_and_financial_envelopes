def selery_count(summa):
    zp_agent = summa * 0.45
    branch_money = (summa - zp_agent)*0.15
    third_step = summa - zp_agent - branch_money

    print(f'ЗП агента - {zp_agent}\nНа Агенство - {int(branch_money)}\nЗП Руководитель Отдела - {int(third_step*0.5)}\nЗП Руководитель другого отдела - {int(third_step*0.05)}'
          f'\nИФ сотрудника - {int(third_step*0.01)}\nИФ Руководитель Отдела - {int(third_step*0.07)}\nИФ Основатель - {int(third_step*0.07)}\nЗП Основатель - {int(third_step*0.3)}')

how = int(input('Сумма'))
selery_count(how)


def financial_envelopes(list_exception, amount_of_money):
    """Передаем в списке названия тех инвестиционных инструментов которые не принимают участия
     в распределении финансов. проценты с непринимающих участия деляться на остальные категории"""
    invest = { 'conservative': 5, 'business': 35, 'relocate': 5, 'vocation': 20,
              'crypto': 5, 'antiques': 5, 'save': 25}
    add_percent = sum([invest.pop(x) for x in list_exception])/len(invest)
    for key in invest.keys():
        invest[key] += add_percent
    all_money = 0
    for envelope, factor in invest.items():
        if envelope == 'save':
            save_env_money = amount_of_money - all_money
            print(f'В конверт save сумма = {save_env_money}')
            print('-->', save_env_money + all_money)
        else:
            money_in_env = math.ceil(amount_of_money/100*factor)
            all_money += money_in_env
            print(f'В конверт {envelope} сумма = {money_in_env}')  # сумма в всех конвертах
        # print(f'В конверт {envelope} сумма = {money_in_env}')  # сумма в всех конвертах


amount_of_money = 50000 # Сумма денег для разбития по конвертам.
list_exception = ['business']  # Конверты которые не принимают участия.
financial_envelopes(list_exception, amount_of_money)

#####################################
class MoneyCounter():
    def __init__(self, money):
        self.half_money = money / 2
        self.vova_salary = 0
        self.pasha_money = 0
        self.reinvestment_money = 0
        self.invest_fund_real_estate = 0
        self.addition_to_vova_iffund = self.half_money * 0.05
        self.addition_to_pasha_iffund = self.half_money * 0.05
        self.realest_money(self.half_money)
        self.investor_money(self.half_money)
    
    def realest_money(self, half_money):
        self.vova_salary += half_money * 0.25
        self.pasha_money += half_money * 0.25
        self.reinvestment_money += half_money * 0.25
        self.invest_fund_real_estate += half_money * 0.20
    
    def investor_money(self, half_money):
        self.vova_salary += half_money * 0.30
        self.pasha_money += half_money * 0.40
        self.reinvestment_money += half_money * 0.10
        self.invest_fund_real_estate += half_money * 0.15
    
    def __str__(self):
        return \
            f'''
            ЗП Вова = {self.vova_salary}
            ЗП Паша = {self.pasha_money}
            Реинвестиция = {self.reinvestment_money}
            ИФ агенство = {self.invest_fund_real_estate}
            Добавление к фонду Вовы = {self.addition_to_vova_iffund}
            Добавление к фонду Паши = {self.addition_to_pasha_iffund}
            '''


first = MoneyCounter(1000)
print(first)

